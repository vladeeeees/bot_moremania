## Документация по работе Telegram-бота и скрипта анализа данных

### 1. Общая информация
Telegram-бот предназначен для запуска скрипта формирования отчета по сотрудникам выбранной торговой точки. Бот запрашивает у пользователя выбор локации и ввод пароля, после чего запускает внешний Python-скрипт, который анализирует данные из нескольких Excel-файлов и создает отчет.

### 2. Telegram-бот
#### 2.1. Функции бота
- Принимает команды /start и /help, выводит сообщение с кнопкой "Начать работу".
- По нажатию кнопки предлагает выбрать локацию из списка.
- После выбора локации запрашивает пароль.
- Проверяет введенный пароль.
- Запускает внешний скрипт с передачей выбранной локации в качестве аргумента.
- Получает от скрипта путь к сгенерированному файлу.
- Отправляет пользователю сгенерированный файл Excel.
- Выводит текстовые данные из файла (информация по сотрудникам) в чат.

#### 2.2. Локации и пароли
- Локации задаются в словаре `locations`.
- Пароли задаются в словаре `passwords`.
- Переменные паролей загружаются из `.env` файла.

#### 2.3. Взаимодействие со скриптом
- Бот вызывает внешний скрипт через `subprocess.run()` с передачей аргумента локации.
- Ожидается, что скрипт вернет последней строкой `SUCCESS:<путь_к_файлу>`.

### 3. Скрипт анализа данных
#### 3.1. Функции скрипта
- Принимает код точки в качестве аргумента (например, `kievskaya`, `dmitrovka`).
- Загружает данные из 3 Excel-файлов:
  - Общий список сотрудников.
  - Регистрационные данные.
  - Патентные данные.
- Определяет список сотрудников, относящихся к выбранной локации.
- Ищет информацию о каждом сотруднике в регистрационных и патентных данных.
- Рассчитывает оставшееся время действия регистрации и патента.
- Исключает сотрудников, не имеющих полного комплекта данных.
- Исключает сотрудников по ключевым словам (например, клининг, повар и т.д.).
- Формирует таблицу с результатами.
- Сохраняет таблицу в папку `выгрузки`.
- Выводит строку `SUCCESS:<путь_к_файлу>` в stdout в случае успешной генерации.

#### 3.2. Файлы
- `source_file` — Путь к файлу со списком сотрудников.
- `registration_file` — Путь к файлу с регистрационными данными.
- `patent_file` — Путь к файлу с патентными данными.
- `output_folder` — Папка, в которую сохраняются выгрузки.

#### 3.3. Исключения
- Исключаются сотрудники по ключевым словам из списка `EXCLUDE_KEYWORDS`.

### 4. Подготовка к запуску
- Установить зависимости:
  ```bash
  pip install aiogram pandas python-dotenv openpyxl
  ```
- Создать файл `.env` с переменными:
  ```
  BOT_TOKEN=токен_бота
  ADMIN_IDS=123456789,987654321
  PASSWORD_KIEVSKAYA=пароль1
  PASSWORD_DMITROVKA=пароль2
  ```
- Указать корректные пути к файлам в скрипте анализа данных.

### 5. Запуск
- Бот:
  ```bash
  python bot.py
  ```
- Скрипт анализа данных (вручную):
  ```bash
  python script.py kievskaya
  ```

